name: 'Sonar Fork Analysis'
description: 'Analyse project with Sonar including external fork'
runs:
  using: "composite"
  steps:
    ### PREPARE ANALYSIS ###
    - name: 'Prepare target artifact'
      if: github.event_name != 'workflow_run'
      shell: bash
      run: find -iname "*target" -type d -exec tar -rf target.tar {} \+

    - name: 'Set groupId'
      if: github.event_name != 'workflow_run'
      shell: bash
      run: echo "group_id=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.groupId | tr . /)" >> "$GITHUB_ENV"

    - name: 'Prepare repository artifact'
      if: github.event_name != 'workflow_run'
      shell: bash
      run: |
        pushd ~/.m2/repository
        find -path "./${group_id}/*" -exec tar -rf repository.tar {} \+
        popd
        mv ~/.m2/repository/repository.tar .

    - name: 'Upload sonar artifact'
      if: github.event_name != 'workflow_run'
      uses: actions/upload-artifact@v4
      with:
        name: sonar-artifact
        path: |
          target.tar
          repository.tar
        if-no-files-found: error
        retention-days: 1

    ### EXECUTE ANALYSIS ###
    - name: 'Checkout project'
      if: github.event_name == 'workflow_run'
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.workflow_run.head_repository.full_name }}
        ref: ${{ github.event.workflow_run.head_branch }}
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of Sonar analysis

    - name: 'Cache SonarCloud packages'
      if: github.event_name == 'workflow_run'
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: 'Download sonar artifact'
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        name: sonar-artifact
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ env.GITHUB_TOKEN }}
        merge-multiple: true

    - name: 'Display structure of downloaded files'
      if: github.event_name == 'workflow_run'
      shell: bash
      run: ls -ahl
