name: 'Sonar Fork Analysis'
description: 'Analyse project with Sonar including external fork'
inputs:
  java-version:
    description: 'The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in actions/setup-java README file'
    required: true
  distribution:
    description: 'Java distribution. See the list of supported distributions in actions/setup-java README file'
    required: true
  github-token:
    description: 'The GitHub token used to authenticate with the GitHub API.'
    required: true
  sonar-token:
    description: 'The Sonar token used to authenticate with the Sonar API.'
    required: true
  project-key:
    description: 'The project key assigned by Sonar.'
    required: true
runs:
  using: "composite"
  steps:
    ### PREPARE ANALYSIS ###
    - name: 'Prepare target artifact'
      if: github.event_name != 'workflow_run'
      shell: bash
      run: find -iname "*target" -type d -exec tar -rf target.tar {} \+

    - name: 'Set groupId'
      if: github.event_name != 'workflow_run'
      shell: bash
      run: echo "group_id=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.groupId | tr . /)" >> "$GITHUB_ENV"

    - name: 'Prepare repository artifact'
      if: github.event_name != 'workflow_run'
      shell: bash
      run: |
        pushd ~/.m2/repository
        find -path "./${group_id}/*" -exec tar -rf repository.tar {} \+
        popd
        mv ~/.m2/repository/repository.tar .

    - name: 'Upload sonar artifact'
      if: github.event_name != 'workflow_run'
      uses: actions/upload-artifact@v4
      with:
        name: sonar-artifact
        path: |
          target.tar
          repository.tar
        if-no-files-found: error
        retention-days: 1

    ### EXECUTE ANALYSIS ###
    - name: 'Checkout project'
      if: github.event_name == 'workflow_run'
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event.workflow_run.head_repository.full_name }}
        ref: ${{ github.event.workflow_run.head_branch }}
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of Sonar analysis

    - name: 'Set up Java'
      if: github.event_name == 'workflow_run'
      uses: actions/setup-java@v4
      with:
        java-version: ${{ inputs.java-version }}
        distribution: ${{ inputs.distribution }}
        cache: maven

    - name: 'Cache SonarCloud packages'
      if: github.event_name == 'workflow_run'
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: 'Download sonar artifact'
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        name: sonar-artifact
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ inputs.github-token }}
        merge-multiple: true

    - name: 'Extract artifacts'
      if: github.event_name == 'workflow_run'
      shell: bash
      run: |
        tar -xf target.tar
        tar -xf repository.tar -C ~/.m2/repository

    - name: 'Print event type'
      shell: bash
      run: echo ${{ github.event.workflow_run.event }}

    - name: 'Sonar analysis of default branch'
      if: github.event_name == 'workflow_run' $$ github.event.workflow_run.event == 'push'
      shell: bash
      run: >
        mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ inputs.project-key }}
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}

    - name: 'Sonar analysis of pull request'
      if: github.event_name == 'workflow_run' $$ github.event.workflow_run.event == 'pull_request'
      shell: bash
      run: >
        mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ inputs.project-key }}
        -Dsonar.scm.revision=${{ github.event.workflow_run.head_sha }}
        -Dsonar.pullrequest.key=${{ github.event.workflow_run.pull_requests[0].number }}
        -Dsonar.pullrequest.branch=${{ github.event.workflow_run.pull_requests[0].head.ref }}
        -Dsonar.pullrequest.base=${{ github.event.workflow_run.pull_requests[0].base.ref }}
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
